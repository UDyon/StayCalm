import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.time.LocalDate;
import java.util.*;

import javax.swing.DefaultCellEditor;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.ListCellRenderer;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

@SuppressWarnings("serial")

public class StayCalm {
	public static void main(String[] args) {
		new START();
	}
}

class START extends JFrame implements ActionListener {
    private JButton start = new JButton();
    
    public START() {
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);
        
        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);
        
        ImageIcon icon = new ImageIcon("src/start.png");
        
        start.setIcon(icon);
        
        start.setSize(490, 630);
        start.setLocation(0, 0);
        start.setBackground(Color.WHITE);
        
        start.addActionListener(this);
        c.add(start);
    }
    
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == start) {
            new LOGIN();
            dispose();
        }
    }
}

class LOGIN extends JFrame implements ActionListener { // 로그인 프레임
	private JButton login = new JButton("로그인");
	private JButton regist = new JButton("회원가입");
	private JTextField id = new JTextField();
	private JPasswordField pw = new JPasswordField();

	File memberfile = new File("memberfile.txt");

	public LOGIN() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setTitle("StayCalm");
		setLocation(400, 0);
		setSize(500, 650);
		setVisible(true);

		Container c = getContentPane();
		c.setLayout(null);
		c.setBackground(Color.WHITE);

		JLabel title = new JLabel("Stay Calm");
		title.setSize(1000, 1000);
		title.setLocation(100, -400);
		title.setFont(new Font("맑은 고딕", Font.BOLD, 60));
		title.setForeground(Color.BLACK);
		c.add(title);

		id.setSize(190, 35);
		id.setLocation(160, 235);
		c.add(id);
		JLabel idtext = new JLabel("ID");
		idtext.setSize(200, 35);
		idtext.setLocation(120, 235);
		idtext.setFont(new Font("맑은 고딕", Font.BOLD, 20));
		idtext.setForeground(Color.BLACK);
		c.add(idtext);

		pw.setSize(190, 35);
		pw.setLocation(160, 300);
		c.add(pw);
		JLabel pwtext = new JLabel("PW");
		pwtext.setSize(200, 35);
		pwtext.setLocation(110, 300);
		pwtext.setFont(new Font("맑은 고딕", Font.BOLD, 20));
		pwtext.setForeground(Color.BLACK);
		c.add(pwtext);

		login.setSize(150, 40);
		login.setLocation(165, 450);
		login.setFont(new Font("맑은 고딕", Font.BOLD, 20));
		login.setBackground(Color.WHITE);
		login.setForeground(Color.BLACK);
		login.addActionListener(this);
		c.add(login);

		regist.setSize(150, 40);
		regist.setLocation(165, 510);
		regist.setFont(new Font("맑은 고딕", Font.BOLD, 20));
		regist.setBackground(Color.WHITE);
		regist.addActionListener(this);
		c.add(regist);
	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == login) // 로그인 버튼
		{
			String idtemp = id.getText();
			String pwtemp = pw.getText();
			if (idtemp.equals("manager") && pwtemp.equals("manager")) {
				dispose();
				return;
			}
			try {
				pwtemp = hashing(pwtemp);
			} catch (NoSuchAlgorithmException e2) {
				e2.printStackTrace();
			}
			try {
				if (!memberfile.exists())
					try {
						memberfile.createNewFile();
					} catch (IOException e2) {
						e2.printStackTrace();
					}
				Scanner s = new Scanner(memberfile);
				while (s.hasNextLine()) {
					StringTokenizer st = new StringTokenizer(s.nextLine(), " ");
					String idtoken = st.nextToken();
					String pwtoken = st.nextToken();
					if (idtoken.equals(idtemp) && pwtoken.equals(pwtemp)) {
						try {
							new USERMAIN(idtemp);
						} catch (IOException e1) {
							e1.printStackTrace();
						}
						dispose();
						return;
					}
				}
				JOptionPane.showMessageDialog(null, "로그인에 실패하였습니다.", "오류", JOptionPane.ERROR_MESSAGE);
			} catch (FileNotFoundException e1) {
				e1.printStackTrace();
			}

		} else if (e.getSource() == regist) // 회원가입 버튼
		{
			new REGIST();
		}
	}

	public static String hashing(String password) throws NoSuchAlgorithmException // 비밀번호 해싱 (SHA512)
	{
		MessageDigest md = MessageDigest.getInstance("SHA-512");
		md.update(password.getBytes());
		String hex = String.format("%0128x", new BigInteger(1, md.digest()));
		return hex;
	}
}

class REGIST extends JFrame implements ActionListener { // 회원가입 프레임 //아이디 중복체크

	private JTextField ID = new JTextField();
	private JTextField PASSWORD = new JTextField();
	private JTextField PWcheck = new JTextField();
	private JTextField name = new JTextField();
	private JTextField pnumber = new JTextField();
	private JButton regist = new JButton("가입하기");

	public REGIST() {
		setTitle("StayCalm");
		setLocation(600, 150);
		setSize(400, 450);
		setVisible(true);

		Container c = getContentPane();
		c.setLayout(null);
		c.setBackground(Color.WHITE);

		JLabel jointext = new JLabel("회원가입");
		jointext.setSize(1000, 1000);
		jointext.setLocation(155, -480);
		jointext.setFont(new Font("맑은 고딕", Font.BOLD, 20));
		jointext.setForeground(Color.BLACK);
		c.add(jointext);

		JLabel idtext = new JLabel("ID");
		idtext.setSize(200, 40);
		idtext.setLocation(83, 53);
		idtext.setFont(new Font("맑은 고딕", Font.BOLD, 13));
		idtext.setForeground(Color.BLACK);
		c.add(idtext);
		ID.setSize(200, 30);
		ID.setLocation(103, 60);
		c.add(ID);

		JLabel pwtext = new JLabel("PW");
		pwtext.setSize(200, 40);
		pwtext.setLocation(77, 113);
		pwtext.setFont(new Font("맑은 고딕", Font.BOLD, 13));
		pwtext.setForeground(Color.BLACK);
		c.add(pwtext);
		PASSWORD.setSize(200, 30);
		PASSWORD.setLocation(103, 120);
		c.add(PASSWORD);

		JLabel pwctext = new JLabel("PW 재확인");
		pwctext.setSize(200, 40);
		pwctext.setLocation(32, 153);
		pwctext.setFont(new Font("맑은 고딕", Font.BOLD, 13));
		pwctext.setForeground(Color.BLACK);
		c.add(pwctext);
		PWcheck.setSize(200, 30);
		PWcheck.setLocation(103, 160);
		c.add(PWcheck);

		JLabel nametext = new JLabel("이름");
		nametext.setSize(200, 40);
		nametext.setLocation(72, 213);
		nametext.setFont(new Font("맑은 고딕", Font.BOLD, 13));
		nametext.setForeground(Color.BLACK);
		c.add(nametext);
		name.setSize(200, 30);
		name.setLocation(103, 220);
		c.add(name);

		JLabel pntext = new JLabel("전화번호");
		pntext.setSize(200, 40);
		pntext.setLocation(47, 273);
		pntext.setFont(new Font("맑은 고딕", Font.BOLD, 13));
		pntext.setForeground(Color.BLACK);
		c.add(pntext);
		pnumber.setSize(200, 30);
		pnumber.setLocation(103, 280);
		c.add(pnumber);

		regist.setSize(130, 40);
		regist.setLocation(125, 340);
		regist.setFont(new Font("맑은 고딕", Font.BOLD, 20));
		regist.setBackground(Color.BLACK);
		regist.setForeground(Color.WHITE);
		regist.addActionListener(this);
		c.add(regist);
	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == regist) {
			File memberfile = new File("memberfile.txt");
			if (!memberfile.exists())
				try {
					memberfile.createNewFile();
				} catch (IOException e2) {
					e2.printStackTrace();
				}
			String idt = ID.getText();
			if (idt.equals("")) {
				JOptionPane.showMessageDialog(null, "ID를 입력하세요.", "오류", JOptionPane.ERROR_MESSAGE);
				return;
			}
			String pwt = PASSWORD.getText();
			if (pwt.equals("")) {
				JOptionPane.showMessageDialog(null, "PASSWORD를 입력하세요.", "오류", JOptionPane.ERROR_MESSAGE);
				return;
			}
			String pwct = PWcheck.getText();
			if (!pwt.equals(pwct)) {
				JOptionPane.showMessageDialog(null, "PASSWORD가 일치하지 않습니다.", "오류", JOptionPane.ERROR_MESSAGE);
				return;
			}
			String namet = name.getText();
			if (namet.equals("")) {
				JOptionPane.showMessageDialog(null, "이름을 입력하세요.", "오류", JOptionPane.ERROR_MESSAGE);
				return;
			}
			String pnt = pnumber.getText();
			if (pnt.equals("")) {
				JOptionPane.showMessageDialog(null, "전화번호를 입력하세요.", "오류", JOptionPane.ERROR_MESSAGE);
				return;
			}

			// id 중복체크
			BufferedReader reader = null;
			try {
				reader = new BufferedReader(new InputStreamReader(new FileInputStream(memberfile), "euc-kr"));
			} catch (UnsupportedEncodingException | FileNotFoundException e1) {
				e1.printStackTrace();
			}
			String str = null;
			ArrayList<String> IDlist = new ArrayList<String>();
			try {
				while ((str = reader.readLine()) != null) {
					StringTokenizer st = new StringTokenizer(str, " ");
					String IDcheck = st.nextToken();
					IDlist.add(IDcheck);
				}
			} catch (IOException e1) {
				e1.printStackTrace();
			}
			for (int i = 0; i < IDlist.size(); i++) {
				if (IDlist.get(i).equals(idt) || idt.equals("manager")) {
					JOptionPane.showMessageDialog(null, "이미 존재하는 ID 입니다.", "오류", JOptionPane.ERROR_MESSAGE);
					return;
				}
			}
			try {
				reader.close();
			} catch (IOException e2) {
				e2.printStackTrace();
			}

			try {
				BufferedWriter bw = new BufferedWriter(new FileWriter(memberfile, true));
				bw.write(idt);
				bw.write(" ");
				try {
					bw.write(LOGIN.hashing(pwt));
				} catch (NoSuchAlgorithmException e1) {
					e1.printStackTrace();
				}
				bw.write(" ");
				bw.write(namet);
				bw.write(" ");
				bw.write(pnt);
				bw.write(" ");
				bw.newLine();
				bw.close();
			} catch (IOException e1) {
				e1.printStackTrace();
			}
			JOptionPane.showMessageDialog(null, "회원가입 되셨습니다!");
			dispose();
		}
	}
}

class USERMAIN extends JFrame implements ActionListener {
	private String UID;
	private JLabel title = new JLabel("Stay Calm");
	private JButton logout = new JButton("로그아웃");
	private JButton makeData = new JButton("기록 저장");
	private JButton start = new JButton("요가 시작하기");
	private JButton checkData = new JButton("기록 조회");

	public USERMAIN(String UID) throws IOException {
		this.UID = UID;
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		setTitle("StayCalm");
		setLocation(400, 0);
		setSize(500, 650);
		setVisible(true);

		Container c = getContentPane();
		c.setLayout(null);
		c.setBackground(Color.WHITE);

		title.setSize(1000, 1000);
		title.setLocation(100, -400);
		title.setFont(new Font("맑은 고딕", Font.BOLD, 60));
		title.setForeground(Color.BLACK);
		c.add(title);

		logout.setSize(80, 30);
		logout.setLocation(360, 560);
		logout.setFont(new Font("맑은 고딕", Font.BOLD, 11));
		logout.setBackground(Color.WHITE);
		logout.setForeground(Color.BLACK);
		logout.addActionListener(this);
		c.add(logout);

		start.setSize(130, 180);
		start.setLocation(100, 220);
		start.setFont(new Font("맑은 고딕", Font.BOLD, 14));
		start.setBackground(Color.WHITE);
		start.setForeground(Color.BLACK);
		start.addActionListener(this);
		c.add(start);

		makeData.setSize(130, 80);
		makeData.setLocation(250, 220);
		makeData.setFont(new Font("맑은 고딕", Font.BOLD, 14));
		makeData.setBackground(Color.WHITE);
		makeData.setForeground(Color.BLACK);
		makeData.addActionListener(this);
		c.add(makeData);

		checkData.setSize(130, 80);
		checkData.setLocation(250, 320);
		checkData.setFont(new Font("맑은 고딕", Font.BOLD, 14));
		checkData.setBackground(Color.WHITE);
		checkData.setForeground(Color.BLACK);
		checkData.addActionListener(this);
		c.add(checkData);
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == logout) { // 로그아웃 버튼
			int response = JOptionPane.showConfirmDialog(null, "로그아웃 하시겠습니까?", "확인", JOptionPane.YES_NO_OPTION);
			if (response == JOptionPane.YES_OPTION) {
				new LOGIN();
				dispose();
			}
		}
		else if (e.getSource() == start) {
			new YOGAPOSE(UID);
			dispose();
		}
		else if (e.getSource() == makeData) {
			new MAKEDATA(UID);
			dispose();
		}
		else if (e.getSource() == checkData) {
			new CHECKDATA(UID);
			dispose();
		}
	}
}

class CHECKDATA extends JFrame implements ActionListener {
    private String UID;
    private JButton back = new JButton("<-");
    private DefaultListModel<String> dataListModel;
    private JList<String> dataList;

    public CHECKDATA(String UID) {
        this.UID = UID;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);

        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);
        
        back.setSize(60, 40);
        back.setLocation(0, 0);
        back.setFont(new Font("맑은 고딕", Font.BOLD, 15));
        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);
        back.addActionListener(this);
        c.add(back);

        dataListModel = new DefaultListModel<>();
        dataList = new JList<>(dataListModel);

        JLabel titleLabel = new JLabel("기록 조회");
        titleLabel.setSize(200, 40);
        titleLabel.setLocation(192, 20);
        titleLabel.setFont(new Font("맑은 고딕", Font.BOLD, 20));
        titleLabel.setForeground(Color.BLACK);
        c.add(titleLabel);
        
        dataList.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    String selectedData = dataList.getSelectedValue();
                    if (selectedData != null) {
                        System.out.println(selectedData);
                    }
                }
            }
        }); // 클릭 이벤트를 이용하여 구현할 수 있는 기능이 있을 것 같다.
        
        JScrollPane scrollPane = new JScrollPane(dataList);
        scrollPane.setSize(400, 450);
        scrollPane.setLocation(50, 80);
        c.add(scrollPane);

        readData();
        
        dataList.setModel(dataListModel);
    }

    public void readData() {
        try {
            File file = new File("data.txt");
            if (!file.exists()) {
                return;
            }

            BufferedReader bufferedReader = new BufferedReader(new FileReader(file));
            String line;
            while ((line = bufferedReader.readLine()) != null) {
            	int commaIndex = line.indexOf(","); // 첫 번째 쉼표의 인덱스를 찾음
                if (commaIndex != -1 && commaIndex < line.length() - 1) {
                    String substring = line.substring(commaIndex + 1); // 첫 번째 쉼표 뒷부분만 추출
                    dataListModel.addElement(substring);
                }
            }
            bufferedReader.close();
            
            dataList.setModel(dataListModel); // dataList 업데이트
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == back) {
            try {
				new USERMAIN(UID);
				dispose();
			} catch (IOException e1) {
				e1.printStackTrace();
			}
        }
		
	}
}




class MAKEDATA extends JFrame implements ActionListener {
    private String UID;
    private JButton back = new JButton("<-");
    private JTextField YEAR;
    private JTextField MONTH;
    private JTextField DAY;
    private JTextField TIME;
    private JTextArea memoArea;
    private JButton save;

    public MAKEDATA(String UID) {
        this.UID = UID;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);

        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);

        back.setSize(60, 40);
        back.setLocation(0, 0);
        back.setFont(new Font("맑은 고딕", Font.BOLD, 15));
        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);
        back.addActionListener(this);
        c.add(back);
        
        JLabel makedata = new JLabel("기록 저장");
        makedata.setSize(1000, 1000);
        makedata.setLocation(198, -469);
        makedata.setFont(new Font("맑은 고딕", Font.BOLD, 20));
        makedata.setForeground(Color.BLACK);
        c.add(makedata);

        JLabel date = new JLabel("날짜");
        date.setSize(200, 40);
        date.setLocation(77, 53);
        date.setFont(new Font("맑은 고딕", Font.BOLD, 13));
        date.setForeground(Color.BLACK);
        c.add(date);

        YEAR = new JTextField();
        YEAR.setSize(50, 30);
        YEAR.setLocation(150, 60);
        c.add(YEAR);
        JLabel yeartext = new JLabel("년");
        yeartext.setSize(100, 40);
        yeartext.setLocation(205, 53);
        yeartext.setFont(new Font("맑은 고딕", Font.BOLD, 13));
        yeartext.setForeground(Color.BLACK);
        c.add(yeartext);

        MONTH = new JTextField();
        MONTH.setSize(50, 30);
        MONTH.setLocation(250, 60);
        c.add(MONTH);
        JLabel monthtext = new JLabel("월");
        monthtext.setSize(100, 40);
        monthtext.setLocation(305, 53);
        monthtext.setFont(new Font("맑은 고딕", Font.BOLD, 13));
        monthtext.setForeground(Color.BLACK);
        c.add(monthtext);

        DAY = new JTextField();
        DAY.setSize(50, 30);
        DAY.setLocation(350, 60);
        c.add(DAY);
        JLabel daytext = new JLabel("일");
        daytext.setSize(100, 40);
        daytext.setLocation(405, 53);
        daytext.setFont(new Font("맑은 고딕", Font.BOLD, 13));
        daytext.setForeground(Color.BLACK);
        c.add(daytext);

        JLabel timetext = new JLabel("요가한 시간");
        timetext.setSize(500, 40);
        timetext.setLocation(77, 113);
        timetext.setFont(new Font("맑은 고딕", Font.BOLD, 13));
        timetext.setForeground(Color.BLACK);
        c.add(timetext);

        TIME = new JTextField();
        TIME.setSize(70, 30);
        TIME.setLocation(170, 120);
        c.add(TIME);
        JLabel minutetext = new JLabel("분");
        minutetext.setSize(100, 40);
        minutetext.setLocation(249, 113);
        minutetext.setFont(new Font("맑은 고딕", Font.BOLD, 13));
        minutetext.setForeground(Color.BLACK);
        c.add(minutetext);

        JLabel memotext = new JLabel("메모");
        memotext.setSize(200, 40);
        memotext.setLocation(77, 173);
        memotext.setFont(new Font("맑은 고딕", Font.BOLD, 13));
        memotext.setForeground(Color.BLACK);
        c.add(memotext);

        memoArea = new JTextArea();
        memoArea.setLineWrap(true);
        memoArea.setWrapStyleWord(true);

        JScrollPane scrollPane = new JScrollPane(memoArea);
        scrollPane.setSize(330, 250);
        scrollPane.setLocation(77, 220);
        c.add(scrollPane);

        save = new JButton("저장하기");
        save.setSize(130, 40);
        save.setLocation(174, 500);
        save.setFont(new Font("맑은 고딕", Font.BOLD, 20));
        save.setBackground(Color.BLACK);
        save.setForeground(Color.WHITE);
        save.addActionListener(e -> {
            String year = YEAR.getText();
            String month = MONTH.getText();
            String day = DAY.getText();
            String time = TIME.getText();
            String memo = memoArea.getText();

            if (year.isEmpty() || month.isEmpty() || day.isEmpty() || time.isEmpty() || memo.isEmpty()) {
                JOptionPane.showMessageDialog(null, "모든 항목을 입력해주세요.", "입력 오류", JOptionPane.ERROR_MESSAGE);
            } else {
                String data = "날짜 : " + year + "년 " + month + "월 " + day + "일, 요가 시간 : " + time + "분, 메모 : " + memo;
                saveData(data);
                JOptionPane.showMessageDialog(null, "데이터가 저장되었습니다.", "저장 완료", JOptionPane.INFORMATION_MESSAGE);
                try {
					new USERMAIN(UID);
				} catch (IOException e1) {
					e1.printStackTrace();
				}
                dispose();
            }
        });
        c.add(save);
    }

    public void saveData(String data) {
        try {
            BufferedWriter writer = new BufferedWriter(new FileWriter("data.txt", true));
            writer.write(UID + "," + data);
            writer.newLine();
            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == back) {
            try {
				new USERMAIN(UID);
			} catch (IOException e1) {
				e1.printStackTrace();
			}
			dispose();
        }
	}
}

class YOGAPOSE extends JFrame implements ActionListener { 
    private String UID;
    private JButton back = new JButton("<-");
    private JButton level = new JButton("수준별 추천");
    private JButton part = new JButton("부위별 추천");
    private JList<JPanel> list;
    private DefaultListModel<JPanel> listModel;

    public YOGAPOSE(String UID) {
        this.UID = UID;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);

        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);

        back.setSize(60, 40);
        back.setLocation(0, 0);
        back.setFont(new Font("맑은 고딕", Font.BOLD, 15));
        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);
        back.addActionListener(this);
        c.add(back);

        level.setSize(130, 80);
        level.setLocation(100, 50);
        level.setFont(new Font("맑은 고딕", Font.BOLD, 14));
        level.setBackground(Color.WHITE);
        level.setForeground(Color.BLACK);
        level.addActionListener(this);
        c.add(level);

        part.setSize(130, 80);
        part.setLocation(250, 50);
        part.setFont(new Font("맑은 고딕", Font.BOLD, 14));
        part.setBackground(Color.WHITE);
        part.setForeground(Color.BLACK);
        part.addActionListener(this);
        c.add(part);

        JPanel p = new JPanel();
        p.setLayout(new BorderLayout());
        p.setBackground(Color.WHITE);
        p.setSize(430, 420);
        p.setLocation(30, 160);
        c.add(p);

        listModel = new DefaultListModel<>();
        list = new JList<>(listModel);

        list.setCellRenderer(new ButtonRenderer());

        list.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                int selectedIndex = list.getSelectedIndex();
                System.out.println("Selected button: " + selectedIndex);
            }
        });

        p.add(new JScrollPane(list));

        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(Color.WHITE);
        buttonPanel.setLayout(new GridLayout(0, 2, 10, 10));

        for (int i = 1; i <= 30; i++) {
            JButton button = ButtonFactory.createButton(i);
            buttonPanel.add(button);
        }

        listModel.addElement(buttonPanel);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == back) {
            try {
                new USERMAIN(UID);
                dispose();
            } catch (IOException e1) {
                e1.printStackTrace();
            }
        } else if (e.getSource() == level) {
        	new RecommendByLevel(UID);
			dispose();
        } else if (e.getSource() == part) {
        	new RecommendByPart(UID);
			dispose();
        }
    }
}


class ButtonRenderer implements ListCellRenderer<JPanel>{
	public Component getListCellRendererComponent(JList<? extends JPanel> list, JPanel value, int index, boolean isSelected, boolean cellHasFocus) {
		return value;
	}
}

class ButtonFactory {
    public static JButton createButton(int imageNum) {
        ImageIcon imageIcon = new ImageIcon("src/yoga" + imageNum + ".jfif");
        Image image = imageIcon.getImage();
        Image scaledImage = image.getScaledInstance(200, 150, Image.SCALE_SMOOTH);
        ImageIcon scaledImageIcon = new ImageIcon(scaledImage);

        JButton button = new JButton(scaledImageIcon);
        button.setBackground(Color.WHITE);
        button.setPreferredSize(new Dimension(100, 150));
        button.setActionCommand("Button" + imageNum);

        return button;
    }
}

class RecommendByLevel extends JFrame implements ActionListener {
    private String UID;
    private JButton back = new JButton("<-");
    private JButton level1 = new JButton("초보");
    private JButton level2 = new JButton("중수");
    private JButton level3 = new JButton("숙련자");
    
    public RecommendByLevel(String UID) {
        this.UID = UID;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);

        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);

        back.setSize(60, 40);
        back.setLocation(0, 0);
        back.setFont(new Font("맑은 고딕", Font.BOLD, 15));
        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);
        back.addActionListener(this);
        c.add(back);

        level1.setSize(200, 150);
        level1.setLocation(150, 50);
        level1.setFont(new Font("맑은 고딕", Font.BOLD, 14));
        level1.setBackground(Color.WHITE);
        level1.setForeground(Color.BLACK);
        level1.addActionListener(this);
        c.add(level1);

        level2.setSize(200, 150);
        level2.setLocation(150, 225);
        level2.setFont(new Font("맑은 고딕", Font.BOLD, 14));
        level2.setBackground(Color.WHITE);
        level2.setForeground(Color.BLACK);
        level2.addActionListener(this);
        c.add(level2);
        
        level3.setSize(200, 150);
        level3.setLocation(150, 400);
        level3.setFont(new Font("맑은 고딕", Font.BOLD, 14));
        level3.setBackground(Color.WHITE);
        level3.setForeground(Color.BLACK);
        level3.addActionListener(this);
        c.add(level3);

    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == back) {
            new YOGAPOSE(UID);
			dispose();
        }
        else if(e.getSource() == level1) {
        	new LEVEL1(UID);
        	dispose();
        }
        else if(e.getSource() == level2) {
        	new LEVEL2(UID);
        	dispose();
        }
        else if(e.getSource() == level3) {
        	new LEVEL3(UID);
        	dispose();
        }
    }
}

class RecommendByPart extends JFrame implements ActionListener {
    private String UID;
    private JButton back = new JButton("<-");
    private JButton part1 = new JButton("코어");
    private JButton part2 = new JButton("등");
    private JButton part3 = new JButton("다리");
    
    public RecommendByPart(String UID) {
        this.UID = UID;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);

        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);

        back.setSize(60, 40);
        back.setLocation(0, 0);
        back.setFont(new Font("맑은 고딕", Font.BOLD, 15));
        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);
        back.addActionListener(this);
        c.add(back);

        part1.setSize(200, 150);
        part1.setLocation(150, 50);
        part1.setFont(new Font("맑은 고딕", Font.BOLD, 14));
        part1.setBackground(Color.WHITE);
        part1.setForeground(Color.BLACK);
        part1.addActionListener(this);
        c.add(part1);

        part2.setSize(200, 150);
        part2.setLocation(150, 225);
        part2.setFont(new Font("맑은 고딕", Font.BOLD, 14));
        part2.setBackground(Color.WHITE);
        part2.setForeground(Color.BLACK);
        part2.addActionListener(this);
        c.add(part2);
        
        part3.setSize(200, 150);
        part3.setLocation(150, 400);
        part3.setFont(new Font("맑은 고딕", Font.BOLD, 14));
        part3.setBackground(Color.WHITE);
        part3.setForeground(Color.BLACK);
        part3.addActionListener(this);
        c.add(part3);

    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == back) {
            new YOGAPOSE(UID);
			dispose();
        }
        else if(e.getSource() == part1) {
        	new PART1(UID);
        	dispose();
        }
        else if(e.getSource() == part2) {
        	new PART2(UID);
        	dispose();
        }
        else if(e.getSource() == part3) {
        	new PART3(UID);
        	dispose();
        }
    }
}

class LEVEL1 extends JFrame implements ActionListener {
    private String UID;
    private JButton back = new JButton("<-");
    private JButton routine = new JButton("루틴 추천");
    private JList<JPanel> list;
    private DefaultListModel<JPanel> listModel;

    public LEVEL1(String UID) {
        this.UID = UID;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);

        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);

        back.setSize(60, 40);
        back.setLocation(0, 0);
        back.setFont(new Font("맑은 고딕", Font.BOLD, 15));
        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);
        back.addActionListener(this);
        c.add(back);

        routine.setSize(130, 80);
        routine.setLocation(170, 50);
        routine.setFont(new Font("맑은 고딕", Font.BOLD, 14));
        routine.setBackground(Color.WHITE);
        routine.setForeground(Color.BLACK);
        routine.addActionListener(this);
        c.add(routine);

        JPanel p = new JPanel();
        p.setLayout(new BorderLayout());
        p.setBackground(Color.WHITE);
        p.setSize(430, 420);
        p.setLocation(30, 160);
        c.add(p);

        // JList 생성
        listModel = new DefaultListModel<>();
        list = new JList<>(listModel);

        // JList 렌더러 설정
        list.setCellRenderer(new ButtonRenderer());

        // JList 선택 이벤트 리스너 설정
        list.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                // 선택된 항목에 대한 작업 수행
                int selectedIndex = list.getSelectedIndex();
                System.out.println("Selected button: " + selectedIndex);
            }
        });

        p.add(new JScrollPane(list));

        // 버튼들을 추가할 JPanel 생성
        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(Color.WHITE);
        buttonPanel.setLayout(new GridLayout(0, 2, 10, 10));

        JButton button1 = ButtonFactory.createButton(2);
        buttonPanel.add(button1);
        JButton button2 = ButtonFactory.createButton(3);
        buttonPanel.add(button2);
        JButton button3 = ButtonFactory.createButton(4);
        buttonPanel.add(button3);
        JButton button4 = ButtonFactory.createButton(7);
        buttonPanel.add(button4);
        JButton button5 = ButtonFactory.createButton(8);
        buttonPanel.add(button5);
        JButton button6 = ButtonFactory.createButton(9);
        buttonPanel.add(button6);
        JButton button7 = ButtonFactory.createButton(12);
        buttonPanel.add(button7);
        JButton button8 = ButtonFactory.createButton(21);
        buttonPanel.add(button8);
        JButton button9 = ButtonFactory.createButton(22);
        buttonPanel.add(button9);
        JButton button10 = ButtonFactory.createButton(23);
        buttonPanel.add(button10);
        JButton button11 = ButtonFactory.createButton(26);
        buttonPanel.add(button11);
        JButton button12 = ButtonFactory.createButton(28);
        buttonPanel.add(button12);

        listModel.addElement(buttonPanel);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == back) {
            new RecommendByLevel(UID);
			dispose();
        }
        if (e.getSource() == routine) {
        	new ROUTINELEVEL1(UID);
        	dispose();
        }
    }
}

class ROUTINELEVEL1 extends JFrame implements ActionListener {
    private String UID;
    private JButton back = new JButton("<-");
    private JList<JPanel> list;
    private DefaultListModel<JPanel> listModel;
    
    private JButton start, pause, end;
	private JLabel w1, w2, w3;
	private int mm, ss, ms, t=0;
	private Thread p_display, t_display;

    public ROUTINELEVEL1(String UID) {
        this.UID = UID;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);

        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);

        back.setSize(60, 40);
        back.setLocation(0, 0);
        back.setFont(new Font("맑은 고딕", Font.BOLD, 15));
        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);
        back.addActionListener(this);
        c.add(back);

        JPanel p = new JPanel();
        p.setLayout(new BorderLayout());
        p.setBackground(Color.WHITE);
        p.setSize(430, 400);
        p.setLocation(30, 50);
        c.add(p);

        // JList 생성
        listModel = new DefaultListModel<>();
        list = new JList<>(listModel);

        // JList 렌더러 설정
        list.setCellRenderer(new ButtonRenderer());

        // JList 선택 이벤트 리스너 설정
        list.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                // 선택된 항목에 대한 작업 수행
                int selectedIndex = list.getSelectedIndex();
                System.out.println("Selected button: " + selectedIndex);
            }
        });

        p.add(new JScrollPane(list));

        // 버튼들을 추가할 JPanel 생성
        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(Color.WHITE);
        buttonPanel.setLayout(new GridLayout(0, 2, 10, 10)); 

        JButton button1 = ButtonFactory.createButton(2);
        buttonPanel.add(button1);
        JButton button11 = ButtonFactory.createButton(26);
        buttonPanel.add(button11);
        JButton button9 = ButtonFactory.createButton(22);
        buttonPanel.add(button9);
        JButton button3 = ButtonFactory.createButton(4);
        buttonPanel.add(button3);
        JButton button7 = ButtonFactory.createButton(12);
        buttonPanel.add(button7);
        JButton button12 = ButtonFactory.createButton(28);
        buttonPanel.add(button12);
        JButton button4 = ButtonFactory.createButton(7);
        buttonPanel.add(button4);
        JButton button5 = ButtonFactory.createButton(8);
        buttonPanel.add(button5);
        JButton button6 = ButtonFactory.createButton(9);
        buttonPanel.add(button6);
        JButton button2 = ButtonFactory.createButton(3);
        buttonPanel.add(button2);
        JButton button10 = ButtonFactory.createButton(23);
        buttonPanel.add(button10);
        JButton button8 = ButtonFactory.createButton(21);
        buttonPanel.add(button8);
        
        listModel.addElement(buttonPanel);
        
        
        JPanel timer = new JPanel();
		timer.setLayout(null);
		timer.setBackground(Color.WHITE);
		timer.setSize(400,150);
		timer.setLocation(0,450);
		c.add(timer);

		JPanel wp = new JPanel(new FlowLayout(FlowLayout.CENTER));
		wp.setBackground(Color.WHITE);
		wp.setSize(500,150);
		wp.setLocation(0,10);
		JLabel c1 = new JLabel(" : ");	
		c1.setFont(new Font("serif", Font.BOLD,40));
		c1.setForeground(Color.BLACK);
		JLabel c2 = new JLabel(" : ");
		c2.setFont(new Font("serif", Font.BOLD,40));
		c2.setForeground(Color.BLACK);
		w1 = new JLabel("00");
		w1.setFont(new Font("serif", Font.BOLD,40));
		w1.setForeground(Color.BLACK);
		w2 = new JLabel("00");
		w2.setFont(new Font("serif", Font.BOLD,40));
		w2.setForeground(Color.BLACK);
		w3 = new JLabel("00");
		w3.setFont(new Font("serif", Font.BOLD,40));
		w3.setForeground(Color.BLACK);
		
		start = new JButton("START");
		start.setSize(100,60);
		start.setLocation(80,70);
		start.setFont(new Font("맑은 고딕", Font.BOLD,20));
		start.setBackground(Color.BLACK);
		start.setForeground(Color.WHITE);
		start.addActionListener(this);
		timer.add(start);
		
		pause = new JButton("PAUSE");
		pause.setSize(100,60);
		pause.setLocation(190,70);
		pause.setFont(new Font("맑은 고딕", Font.BOLD,20));
		pause.setBackground(Color.BLACK);
		pause.setForeground(Color.WHITE);
		pause.addActionListener(this);
		timer.add(pause);
		
		end = new JButton("END");
		end.setSize(100,60);
		end.setLocation(300,70);
		end.setFont(new Font("맑은 고딕", Font.BOLD,20));
		end.setBackground(Color.BLACK);
		end.setForeground(Color.WHITE);
		end.addActionListener(this);
		timer.add(end);
		
		wp.add(w1);
		wp.add(c1);
		wp.add(w2);
		wp.add(c2);
		wp.add(w3);

		timer.add(wp);
		c.add(timer);

		pause.setEnabled(false);
		end.setEnabled(false);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == back) {
            new LEVEL1(UID);
			dispose();
        }
        if(e.getSource()==start)
		{
			start.setEnabled(false);
			pause.setEnabled(true);
			end.setEnabled(false);
			
			p_display = new Thread(new Runnable() {

				@Override
				public void run() {
					mm = Integer.parseInt(w1.getText());
					ss = Integer.parseInt(w2.getText());
					ms = Integer.parseInt(w3.getText());
					
					
					while (p_display == Thread.currentThread()) {	

						mm = t % (100000*60) / 100 / 60 ;
						ss = t % (1000*60) / 100 % 60 ;
						ms = t %100;
						
						try {
							Thread.sleep(9);
							
							w1.setText(String.format("%02d", mm));
							w2.setText(String.format("%02d", ss));
							w3.setText(String.format("%02d", ms));
							
							t++;
							
						}catch (InterruptedException e1) {}
					}
				}
			});

			
			p_display.start();
		}
		else if(e.getSource()==pause)
		{
			start.setEnabled(true);
			pause.setEnabled(false);
			end.setEnabled(true);
			
			p_display = null;
		}
		else if(e.getSource()==end)
		{
			start.setEnabled(true);
			pause.setEnabled(false);
			end.setEnabled(false);
			
			w3.setText("00");
			w2.setText("00");
			w1.setText("00");
			
			t=0;
		}
    }
}

class LEVEL2 extends JFrame implements ActionListener {  
    private String UID;
    private JButton back = new JButton("<-");
    private JButton routine = new JButton("루틴 추천");
    private JList<JPanel> list;
    private DefaultListModel<JPanel> listModel;

    public LEVEL2(String UID) {
        this.UID = UID;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);

        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);

        back.setSize(60, 40);
        back.setLocation(0, 0);
        back.setFont(new Font("맑은 고딕", Font.BOLD, 15));
        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);
        back.addActionListener(this);
        c.add(back);

        routine.setSize(130, 80);
        routine.setLocation(170, 50);
        routine.setFont(new Font("맑은 고딕", Font.BOLD, 14));
        routine.setBackground(Color.WHITE);
        routine.setForeground(Color.BLACK);
        routine.addActionListener(this);
        c.add(routine);

        JPanel p = new JPanel();
        p.setLayout(new BorderLayout());
        p.setBackground(Color.WHITE);
        p.setSize(430, 420);
        p.setLocation(30, 160);
        c.add(p);

        // JList 생성
        listModel = new DefaultListModel<>();
        list = new JList<>(listModel);

        // JList 렌더러 설정
        list.setCellRenderer(new ButtonRenderer());

        // JList 선택 이벤트 리스너 설정
        list.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                // 선택된 항목에 대한 작업 수행
                int selectedIndex = list.getSelectedIndex();
                System.out.println("Selected button: " + selectedIndex);
            }
        });

        p.add(new JScrollPane(list));

        // 버튼들을 추가할 JPanel 생성
        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(Color.WHITE);
        buttonPanel.setLayout(new GridLayout(0, 2, 10, 10));  

         
        JButton button1 = ButtonFactory.createButton(5);
        buttonPanel.add(button1);
        JButton button2 = ButtonFactory.createButton(6);
        buttonPanel.add(button2);
        JButton button3 = ButtonFactory.createButton(10);
        buttonPanel.add(button3);
        JButton button4 = ButtonFactory.createButton(11);
        buttonPanel.add(button4);
        JButton button5 = ButtonFactory.createButton(14);
        buttonPanel.add(button5);
        JButton button6 = ButtonFactory.createButton(16);
        buttonPanel.add(button6);
        JButton button7 = ButtonFactory.createButton(18);
        buttonPanel.add(button7);
        JButton button8 = ButtonFactory.createButton(20);
        buttonPanel.add(button8);
        JButton button9 = ButtonFactory.createButton(29);
        buttonPanel.add(button9);

         
        listModel.addElement(buttonPanel);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == back) {
            new RecommendByLevel(UID);
			dispose();
        }
        if (e.getSource() == routine) {
        	new ROUTINELEVEL2(UID);
        	dispose();
        }
    }
}

class ROUTINELEVEL2 extends JFrame implements ActionListener {  
    private String UID;
    private JButton back = new JButton("<-");
    private JList<JPanel> list;
    private DefaultListModel<JPanel> listModel;
    
    private JButton start, pause, end;
	private JLabel w1, w2, w3;
	private int mm, ss, ms, t=0;
	private Thread p_display, t_display;

    public ROUTINELEVEL2(String UID) {
        this.UID = UID;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);

        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);

        back.setSize(60, 40);
        back.setLocation(0, 0);
        back.setFont(new Font("맑은 고딕", Font.BOLD, 15));
        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);
        back.addActionListener(this);
        c.add(back);

        JPanel p = new JPanel();
        p.setLayout(new BorderLayout());
        p.setBackground(Color.WHITE);
        p.setSize(430, 400);
        p.setLocation(30, 50);
        c.add(p);

        // JList 생성
        listModel = new DefaultListModel<>();
        list = new JList<>(listModel);

        // JList 렌더러 설정
        list.setCellRenderer(new ButtonRenderer());

        // JList 선택 이벤트 리스너 설정
        list.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                // 선택된 항목에 대한 작업 수행
                int selectedIndex = list.getSelectedIndex();
                System.out.println("Selected button: " + selectedIndex);
            }
        });

        p.add(new JScrollPane(list));

        // 버튼들을 추가할 JPanel 생성
        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(Color.WHITE);
        buttonPanel.setLayout(new GridLayout(0, 2, 10, 10));  

         
        JButton button6 = ButtonFactory.createButton(16);
        buttonPanel.add(button6);
        JButton button3 = ButtonFactory.createButton(10);
        buttonPanel.add(button3);
        JButton button9 = ButtonFactory.createButton(29);
        buttonPanel.add(button9);
        JButton button1 = ButtonFactory.createButton(5);
        buttonPanel.add(button1);
        JButton button4 = ButtonFactory.createButton(11);
        buttonPanel.add(button4);
        JButton button8 = ButtonFactory.createButton(20);
        buttonPanel.add(button8);
        JButton button2 = ButtonFactory.createButton(6);
        buttonPanel.add(button2);
        JButton button5 = ButtonFactory.createButton(14);
        buttonPanel.add(button5);
        JButton button7 = ButtonFactory.createButton(18);
        buttonPanel.add(button7);
        
         
        listModel.addElement(buttonPanel);
        
        
        JPanel timer = new JPanel();
		timer.setLayout(null);
		timer.setBackground(Color.WHITE);
		timer.setSize(400,150);
		timer.setLocation(0,450);
		c.add(timer);

		JPanel wp = new JPanel(new FlowLayout(FlowLayout.CENTER));
		wp.setBackground(Color.WHITE);
		wp.setSize(500,150);
		wp.setLocation(0,10);
		JLabel c1 = new JLabel(" : ");	
		c1.setFont(new Font("serif", Font.BOLD,40));
		c1.setForeground(Color.BLACK);
		JLabel c2 = new JLabel(" : ");
		c2.setFont(new Font("serif", Font.BOLD,40));
		c2.setForeground(Color.BLACK);
		w1 = new JLabel("00");
		w1.setFont(new Font("serif", Font.BOLD,40));
		w1.setForeground(Color.BLACK);
		w2 = new JLabel("00");
		w2.setFont(new Font("serif", Font.BOLD,40));
		w2.setForeground(Color.BLACK);
		w3 = new JLabel("00");
		w3.setFont(new Font("serif", Font.BOLD,40));
		w3.setForeground(Color.BLACK);
		
		start = new JButton("START");
		start.setSize(100,60);
		start.setLocation(80,70);
		start.setFont(new Font("맑은 고딕", Font.BOLD,20));
		start.setBackground(Color.BLACK);
		start.setForeground(Color.WHITE);
		start.addActionListener(this);
		timer.add(start);
		
		pause = new JButton("PAUSE");
		pause.setSize(100,60);
		pause.setLocation(190,70);
		pause.setFont(new Font("맑은 고딕", Font.BOLD,20));
		pause.setBackground(Color.BLACK);
		pause.setForeground(Color.WHITE);
		pause.addActionListener(this);
		timer.add(pause);
		
		end = new JButton("END");
		end.setSize(100,60);
		end.setLocation(300,70);
		end.setFont(new Font("맑은 고딕", Font.BOLD,20));
		end.setBackground(Color.BLACK);
		end.setForeground(Color.WHITE);
		end.addActionListener(this);
		timer.add(end);
		
		wp.add(w1);
		wp.add(c1);
		wp.add(w2);
		wp.add(c2);
		wp.add(w3);

		timer.add(wp);
		c.add(timer);

		pause.setEnabled(false);
		end.setEnabled(false);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == back) {
            new LEVEL2(UID);
			dispose();
        }
        if(e.getSource()==start)
		{
			start.setEnabled(false);
			pause.setEnabled(true);
			end.setEnabled(false);
			
			p_display = new Thread(new Runnable() {

				@Override
				public void run() {
					mm = Integer.parseInt(w1.getText());
					ss = Integer.parseInt(w2.getText());
					ms = Integer.parseInt(w3.getText());
					
					
					while (p_display == Thread.currentThread()) {	

						mm = t % (100000*60) / 100 / 60 ;
						ss = t % (1000*60) / 100 % 60 ;
						ms = t %100;
						
						try {
							Thread.sleep(9);
							
							w1.setText(String.format("%02d", mm));
							w2.setText(String.format("%02d", ss));
							w3.setText(String.format("%02d", ms));
							
							t++;
							
						}catch (InterruptedException e1) {}
					}
				}
			});

			
			p_display.start();
		}
		else if(e.getSource()==pause)
		{
			start.setEnabled(true);
			pause.setEnabled(false);
			end.setEnabled(true);
			
			p_display = null;
		}
		else if(e.getSource()==end)
		{
			start.setEnabled(true);
			pause.setEnabled(false);
			end.setEnabled(false);
			
			w3.setText("00");
			w2.setText("00");
			w1.setText("00");
			
			t=0;
		}
    }
}
class LEVEL3 extends JFrame implements ActionListener {  
    private String UID;
    private JButton back = new JButton("<-");
    private JButton routine = new JButton("루틴 추천");
    private JList<JPanel> list;
    private DefaultListModel<JPanel> listModel;

    public LEVEL3(String UID) {
        this.UID = UID;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);

        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);

        back.setSize(60, 40);
        back.setLocation(0, 0);
        back.setFont(new Font("맑은 고딕", Font.BOLD, 15));
        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);
        back.addActionListener(this);
        c.add(back);

        routine.setSize(130, 80);
        routine.setLocation(170, 50);
        routine.setFont(new Font("맑은 고딕", Font.BOLD, 14));
        routine.setBackground(Color.WHITE);
        routine.setForeground(Color.BLACK);
        routine.addActionListener(this);
        c.add(routine);

        JPanel p = new JPanel();
        p.setLayout(new BorderLayout());
        p.setBackground(Color.WHITE);
        p.setSize(430, 420);
        p.setLocation(30, 160);
        c.add(p);

        // JList 생성
        listModel = new DefaultListModel<>();
        list = new JList<>(listModel);

        // JList 렌더러 설정
        list.setCellRenderer(new ButtonRenderer());

        // JList 선택 이벤트 리스너 설정
        list.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                // 선택된 항목에 대한 작업 수행
                int selectedIndex = list.getSelectedIndex();
                System.out.println("Selected button: " + selectedIndex);
            }
        });

        p.add(new JScrollPane(list));

        // 버튼들을 추가할 JPanel 생성
        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(Color.WHITE);
        buttonPanel.setLayout(new GridLayout(0, 2, 10, 10));  

         
        JButton button1 = ButtonFactory.createButton(1);
        buttonPanel.add(button1);
        JButton button2 = ButtonFactory.createButton(13);
        buttonPanel.add(button2);
        JButton button3 = ButtonFactory.createButton(15);
        buttonPanel.add(button3);
        JButton button4 = ButtonFactory.createButton(17);
        buttonPanel.add(button4);
        JButton button5 = ButtonFactory.createButton(24);
        buttonPanel.add(button5);
        JButton button6 = ButtonFactory.createButton(25);
        buttonPanel.add(button6);
        JButton button7 = ButtonFactory.createButton(27);
        buttonPanel.add(button7);
        JButton button8 = ButtonFactory.createButton(30);
        buttonPanel.add(button8);

         
        listModel.addElement(buttonPanel);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == back) {
            new RecommendByLevel(UID);
			dispose();
        }
        if (e.getSource() == routine) {
        	new ROUTINELEVEL3(UID);
        	dispose();
        }
    }
}

class ROUTINELEVEL3 extends JFrame implements ActionListener {  
    private String UID;
    private JButton back = new JButton("<-");
    private JList<JPanel> list;
    private DefaultListModel<JPanel> listModel;
    
    private JButton start, pause, end;
	private JLabel w1, w2, w3;
	private int mm, ss, ms, t=0;
	private Thread p_display, t_display;

    public ROUTINELEVEL3(String UID) {
        this.UID = UID;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);

        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);

        back.setSize(60, 40);
        back.setLocation(0, 0);
        back.setFont(new Font("맑은 고딕", Font.BOLD, 15));
        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);
        back.addActionListener(this);
        c.add(back);

        JPanel p = new JPanel();
        p.setLayout(new BorderLayout());
        p.setBackground(Color.WHITE);
        p.setSize(430, 400);
        p.setLocation(30, 50);
        c.add(p);

        // JList 생성
        listModel = new DefaultListModel<>();
        list = new JList<>(listModel);

        // JList 렌더러 설정
        list.setCellRenderer(new ButtonRenderer());

        // JList 선택 이벤트 리스너 설정
        list.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                // 선택된 항목에 대한 작업 수행
                int selectedIndex = list.getSelectedIndex();
                System.out.println("Selected button: " + selectedIndex);
            }
        });

        p.add(new JScrollPane(list));

        // 버튼들을 추가할 JPanel 생성
        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(Color.WHITE);
        buttonPanel.setLayout(new GridLayout(0, 2, 10, 10));  

         
        JButton button5 = ButtonFactory.createButton(24);
        buttonPanel.add(button5);
        JButton button6 = ButtonFactory.createButton(25);
        buttonPanel.add(button6);
        JButton button2 = ButtonFactory.createButton(13);
        buttonPanel.add(button2);
        JButton button8 = ButtonFactory.createButton(30);
        buttonPanel.add(button8);
        JButton button4 = ButtonFactory.createButton(17);
        buttonPanel.add(button4);
        JButton button7 = ButtonFactory.createButton(27);
        buttonPanel.add(button7);
        JButton button3 = ButtonFactory.createButton(15);
        buttonPanel.add(button3);
        JButton button1 = ButtonFactory.createButton(1);
        buttonPanel.add(button1);
        
         
        listModel.addElement(buttonPanel);
        
        
        JPanel timer = new JPanel();
		timer.setLayout(null);
		timer.setBackground(Color.WHITE);
		timer.setSize(400,150);
		timer.setLocation(0,450);
		c.add(timer);

		JPanel wp = new JPanel(new FlowLayout(FlowLayout.CENTER));
		wp.setBackground(Color.WHITE);
		wp.setSize(500,150);
		wp.setLocation(0,10);
		JLabel c1 = new JLabel(" : ");	
		c1.setFont(new Font("serif", Font.BOLD,40));
		c1.setForeground(Color.BLACK);
		JLabel c2 = new JLabel(" : ");
		c2.setFont(new Font("serif", Font.BOLD,40));
		c2.setForeground(Color.BLACK);
		w1 = new JLabel("00");
		w1.setFont(new Font("serif", Font.BOLD,40));
		w1.setForeground(Color.BLACK);
		w2 = new JLabel("00");
		w2.setFont(new Font("serif", Font.BOLD,40));
		w2.setForeground(Color.BLACK);
		w3 = new JLabel("00");
		w3.setFont(new Font("serif", Font.BOLD,40));
		w3.setForeground(Color.BLACK);
		
		start = new JButton("START");
		start.setSize(100,60);
		start.setLocation(80,70);
		start.setFont(new Font("맑은 고딕", Font.BOLD,20));
		start.setBackground(Color.BLACK);
		start.setForeground(Color.WHITE);
		start.addActionListener(this);
		timer.add(start);
		
		pause = new JButton("PAUSE");
		pause.setSize(100,60);
		pause.setLocation(190,70);
		pause.setFont(new Font("맑은 고딕", Font.BOLD,20));
		pause.setBackground(Color.BLACK);
		pause.setForeground(Color.WHITE);
		pause.addActionListener(this);
		timer.add(pause);
		
		end = new JButton("END");
		end.setSize(100,60);
		end.setLocation(300,70);
		end.setFont(new Font("맑은 고딕", Font.BOLD,20));
		end.setBackground(Color.BLACK);
		end.setForeground(Color.WHITE);
		end.addActionListener(this);
		timer.add(end);
		
		wp.add(w1);
		wp.add(c1);
		wp.add(w2);
		wp.add(c2);
		wp.add(w3);

		timer.add(wp);
		c.add(timer);

		pause.setEnabled(false);
		end.setEnabled(false);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == back) {
            new LEVEL3(UID);
			dispose();
        }
        if(e.getSource()==start)
		{
			start.setEnabled(false);
			pause.setEnabled(true);
			end.setEnabled(false);
			
			p_display = new Thread(new Runnable() {

				@Override
				public void run() {
					mm = Integer.parseInt(w1.getText());
					ss = Integer.parseInt(w2.getText());
					ms = Integer.parseInt(w3.getText());
					
					
					while (p_display == Thread.currentThread()) {	

						mm = t % (100000*60) / 100 / 60 ;
						ss = t % (1000*60) / 100 % 60 ;
						ms = t %100;
						
						try {
							Thread.sleep(9);
							
							w1.setText(String.format("%02d", mm));
							w2.setText(String.format("%02d", ss));
							w3.setText(String.format("%02d", ms));
							
							t++;
							
						}catch (InterruptedException e1) {}
					}
				}
			});

			
			p_display.start();
		}
		else if(e.getSource()==pause)
		{
			start.setEnabled(true);
			pause.setEnabled(false);
			end.setEnabled(true);
			
			p_display = null;
		}
		else if(e.getSource()==end)
		{
			start.setEnabled(true);
			pause.setEnabled(false);
			end.setEnabled(false);
			
			w3.setText("00");
			w2.setText("00");
			w1.setText("00");
			
			t=0;
		}
    }
}
class PART1 extends JFrame implements ActionListener { // 코어
    private String UID;
    private JButton back = new JButton("<-");
    private JButton routine = new JButton("루틴 추천");
    private JList<JPanel> list;
    private DefaultListModel<JPanel> listModel;

    public PART1(String UID) {
        this.UID = UID;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);

        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);

        back.setSize(60, 40);
        back.setLocation(0, 0);
        back.setFont(new Font("맑은 고딕", Font.BOLD, 15));
        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);
        back.addActionListener(this);
        c.add(back);

        routine.setSize(130, 80);
        routine.setLocation(170, 50);
        routine.setFont(new Font("맑은 고딕", Font.BOLD, 14));
        routine.setBackground(Color.WHITE);
        routine.setForeground(Color.BLACK);
        routine.addActionListener(this);
        c.add(routine);

        JPanel p = new JPanel();
        p.setLayout(new BorderLayout());
        p.setBackground(Color.WHITE);
        p.setSize(430, 420);
        p.setLocation(30, 160);
        c.add(p);

        // JList 생성
        listModel = new DefaultListModel<>();
        list = new JList<>(listModel);

        // JList 렌더러 설정
        list.setCellRenderer(new ButtonRenderer());

        // JList 선택 이벤트 리스너 설정
        list.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                // 선택된 항목에 대한 작업 수행
                int selectedIndex = list.getSelectedIndex();
                System.out.println("Selected button: " + selectedIndex);
            }
        });

        p.add(new JScrollPane(list));

        // 버튼들을 추가할 JPanel 생성
        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(Color.WHITE);
        buttonPanel.setLayout(new GridLayout(0, 2, 10, 10));  

         
        JButton button1 = ButtonFactory.createButton(1);
        buttonPanel.add(button1);
        JButton button2 = ButtonFactory.createButton(6);
        buttonPanel.add(button2);
        JButton button3 = ButtonFactory.createButton(13);
        buttonPanel.add(button3);
        JButton button4 = ButtonFactory.createButton(15);
        buttonPanel.add(button4);
        JButton button5 = ButtonFactory.createButton(16);
        buttonPanel.add(button5);
        JButton button6 = ButtonFactory.createButton(23);
        buttonPanel.add(button6);
        JButton button7 = ButtonFactory.createButton(24);
        buttonPanel.add(button7);
        JButton button8 = ButtonFactory.createButton(25);
        buttonPanel.add(button8);
        JButton button9 = ButtonFactory.createButton(27);
        buttonPanel.add(button9);
        

         
        listModel.addElement(buttonPanel);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == back) {
            new RecommendByPart(UID);
			dispose();
        }
        if (e.getSource() == routine) {
        	new ROUTINEPART1(UID);
        	dispose();
        }
    }
}

class ROUTINEPART1 extends JFrame implements ActionListener {  
    private String UID;
    private JButton back = new JButton("<-");
    private JList<JPanel> list;
    private DefaultListModel<JPanel> listModel;
    
    private JButton start, pause, end;
	private JLabel w1, w2, w3;
	private int mm, ss, ms, t=0;
	private Thread p_display, t_display;

    public ROUTINEPART1(String UID) {
        this.UID = UID;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);

        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);

        back.setSize(60, 40);
        back.setLocation(0, 0);
        back.setFont(new Font("맑은 고딕", Font.BOLD, 15));
        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);
        back.addActionListener(this);
        c.add(back);

        JPanel p = new JPanel();
        p.setLayout(new BorderLayout());
        p.setBackground(Color.WHITE);
        p.setSize(430, 400);
        p.setLocation(30, 50);
        c.add(p);

        // JList 생성
        listModel = new DefaultListModel<>();
        list = new JList<>(listModel);

        // JList 렌더러 설정
        list.setCellRenderer(new ButtonRenderer());

        // JList 선택 이벤트 리스너 설정
        list.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                // 선택된 항목에 대한 작업 수행
                int selectedIndex = list.getSelectedIndex();
                System.out.println("Selected button: " + selectedIndex);
            }
        });

        p.add(new JScrollPane(list));

        // 버튼들을 추가할 JPanel 생성
        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(Color.WHITE);
        buttonPanel.setLayout(new GridLayout(0, 2, 10, 10));  

         
        JButton button1 = ButtonFactory.createButton(1);
        buttonPanel.add(button1);
        JButton button9 = ButtonFactory.createButton(27);
        buttonPanel.add(button9);
        JButton button4 = ButtonFactory.createButton(15);
        buttonPanel.add(button4);
        JButton button6 = ButtonFactory.createButton(23);
        buttonPanel.add(button6);
        JButton button2 = ButtonFactory.createButton(6);
        buttonPanel.add(button2);
        JButton button3 = ButtonFactory.createButton(13);
        buttonPanel.add(button3);
        JButton button5 = ButtonFactory.createButton(16);
        buttonPanel.add(button5);
        JButton button8 = ButtonFactory.createButton(25);
        buttonPanel.add(button8);
        JButton button7 = ButtonFactory.createButton(24);
        buttonPanel.add(button7);
        
         
        listModel.addElement(buttonPanel);
        
        
        JPanel timer = new JPanel();
		timer.setLayout(null);
		timer.setBackground(Color.WHITE);
		timer.setSize(400,150);
		timer.setLocation(0,450);
		c.add(timer);

		JPanel wp = new JPanel(new FlowLayout(FlowLayout.CENTER));
		wp.setBackground(Color.WHITE);
		wp.setSize(500,150);
		wp.setLocation(0,10);
		JLabel c1 = new JLabel(" : ");	
		c1.setFont(new Font("serif", Font.BOLD,40));
		c1.setForeground(Color.BLACK);
		JLabel c2 = new JLabel(" : ");
		c2.setFont(new Font("serif", Font.BOLD,40));
		c2.setForeground(Color.BLACK);
		w1 = new JLabel("00");
		w1.setFont(new Font("serif", Font.BOLD,40));
		w1.setForeground(Color.BLACK);
		w2 = new JLabel("00");
		w2.setFont(new Font("serif", Font.BOLD,40));
		w2.setForeground(Color.BLACK);
		w3 = new JLabel("00");
		w3.setFont(new Font("serif", Font.BOLD,40));
		w3.setForeground(Color.BLACK);
		
		start = new JButton("START");
		start.setSize(100,60);
		start.setLocation(80,70);
		start.setFont(new Font("맑은 고딕", Font.BOLD,20));
		start.setBackground(Color.BLACK);
		start.setForeground(Color.WHITE);
		start.addActionListener(this);
		timer.add(start);
		
		pause = new JButton("PAUSE");
		pause.setSize(100,60);
		pause.setLocation(190,70);
		pause.setFont(new Font("맑은 고딕", Font.BOLD,20));
		pause.setBackground(Color.BLACK);
		pause.setForeground(Color.WHITE);
		pause.addActionListener(this);
		timer.add(pause);
		
		end = new JButton("END");
		end.setSize(100,60);
		end.setLocation(300,70);
		end.setFont(new Font("맑은 고딕", Font.BOLD,20));
		end.setBackground(Color.BLACK);
		end.setForeground(Color.WHITE);
		end.addActionListener(this);
		timer.add(end);
		
		wp.add(w1);
		wp.add(c1);
		wp.add(w2);
		wp.add(c2);
		wp.add(w3);

		timer.add(wp);
		c.add(timer);

		pause.setEnabled(false);
		end.setEnabled(false);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == back) {
            new PART1(UID);
			dispose();
        }
        if(e.getSource()==start)
		{
			start.setEnabled(false);
			pause.setEnabled(true);
			end.setEnabled(false);
			
			p_display = new Thread(new Runnable() {

				@Override
				public void run() {
					mm = Integer.parseInt(w1.getText());
					ss = Integer.parseInt(w2.getText());
					ms = Integer.parseInt(w3.getText());
					
					
					while (p_display == Thread.currentThread()) {	

						mm = t % (100000*60) / 100 / 60 ;
						ss = t % (1000*60) / 100 % 60 ;
						ms = t %100;
						
						try {
							Thread.sleep(9);
							
							w1.setText(String.format("%02d", mm));
							w2.setText(String.format("%02d", ss));
							w3.setText(String.format("%02d", ms));
							
							t++;
							
						}catch (InterruptedException e1) {}
					}
				}
			});

			
			p_display.start();
		}
		else if(e.getSource()==pause)
		{
			start.setEnabled(true);
			pause.setEnabled(false);
			end.setEnabled(true);
			
			p_display = null;
		}
		else if(e.getSource()==end)
		{
			start.setEnabled(true);
			pause.setEnabled(false);
			end.setEnabled(false);
			
			w3.setText("00");
			w2.setText("00");
			w1.setText("00");
			
			t=0;
		}
    }
}

class PART2 extends JFrame implements ActionListener {  
    private String UID;
    private JButton back = new JButton("<-");
    private JButton routine = new JButton("루틴 추천");
    private JList<JPanel> list;
    private DefaultListModel<JPanel> listModel;

    public PART2(String UID) {
        this.UID = UID;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);

        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);

        back.setSize(60, 40);
        back.setLocation(0, 0);
        back.setFont(new Font("맑은 고딕", Font.BOLD, 15));
        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);
        back.addActionListener(this);
        c.add(back);

        routine.setSize(130, 80);
        routine.setLocation(170, 50);
        routine.setFont(new Font("맑은 고딕", Font.BOLD, 14));
        routine.setBackground(Color.WHITE);
        routine.setForeground(Color.BLACK);
        routine.addActionListener(this);
        c.add(routine);

        JPanel p = new JPanel();
        p.setLayout(new BorderLayout());
        p.setBackground(Color.WHITE);
        p.setSize(430, 420);
        p.setLocation(30, 160);
        c.add(p);

        // JList 생성
        listModel = new DefaultListModel<>();
        list = new JList<>(listModel);

        // JList 렌더러 설정
        list.setCellRenderer(new ButtonRenderer());

        // JList 선택 이벤트 리스너 설정
        list.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                // 선택된 항목에 대한 작업 수행
                int selectedIndex = list.getSelectedIndex();
                System.out.println("Selected button: " + selectedIndex);
            }
        });

        p.add(new JScrollPane(list));

        // 버튼들을 추가할 JPanel 생성
        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(Color.WHITE);
        buttonPanel.setLayout(new GridLayout(0, 2, 10, 10));  

         
        JButton button1 = ButtonFactory.createButton(3);
        buttonPanel.add(button1);
        JButton button2 = ButtonFactory.createButton(5);
        buttonPanel.add(button2);
        JButton button3 = ButtonFactory.createButton(7);
        buttonPanel.add(button3);
        JButton button4 = ButtonFactory.createButton(8);
        buttonPanel.add(button4);
        JButton button5 = ButtonFactory.createButton(12);
        buttonPanel.add(button5);
        JButton button6 = ButtonFactory.createButton(14);
        buttonPanel.add(button6);
        JButton button7 = ButtonFactory.createButton(18);
        buttonPanel.add(button7);
        JButton button8 = ButtonFactory.createButton(21);
        buttonPanel.add(button8);
        JButton button9 = ButtonFactory.createButton(28);
        buttonPanel.add(button9);

         
        listModel.addElement(buttonPanel);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == back) {
            new RecommendByPart(UID);
			dispose();
        }
        if (e.getSource() == routine) {
        	new ROUTINEPART2(UID);
        	dispose();
        }
    }
}

class ROUTINEPART2 extends JFrame implements ActionListener {  
    private String UID;
    private JButton back = new JButton("<-");
    private JList<JPanel> list;
    private DefaultListModel<JPanel> listModel;
    
    private JButton start, pause, end;
	private JLabel w1, w2, w3;
	private int mm, ss, ms, t=0;
	private Thread p_display, t_display;

    public ROUTINEPART2(String UID) {
        this.UID = UID;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);

        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);

        back.setSize(60, 40);
        back.setLocation(0, 0);
        back.setFont(new Font("맑은 고딕", Font.BOLD, 15));
        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);
        back.addActionListener(this);
        c.add(back);

        JPanel p = new JPanel();
        p.setLayout(new BorderLayout());
        p.setBackground(Color.WHITE);
        p.setSize(430, 400);
        p.setLocation(30, 50);
        c.add(p);

        // JList 생성
        listModel = new DefaultListModel<>();
        list = new JList<>(listModel);

        // JList 렌더러 설정
        list.setCellRenderer(new ButtonRenderer());

        // JList 선택 이벤트 리스너 설정
        list.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                // 선택된 항목에 대한 작업 수행
                int selectedIndex = list.getSelectedIndex();
                System.out.println("Selected button: " + selectedIndex);
            }
        });

        p.add(new JScrollPane(list));

        // 버튼들을 추가할 JPanel 생성
        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(Color.WHITE);
        buttonPanel.setLayout(new GridLayout(0, 2, 10, 10));  

         
        JButton button6 = ButtonFactory.createButton(14);
        buttonPanel.add(button6);
        JButton button2 = ButtonFactory.createButton(5);
        buttonPanel.add(button2);
        JButton button5 = ButtonFactory.createButton(12);
        buttonPanel.add(button5);
        JButton button7 = ButtonFactory.createButton(18);
        buttonPanel.add(button7);
        JButton button3 = ButtonFactory.createButton(7);
        buttonPanel.add(button3);
        JButton button8 = ButtonFactory.createButton(21);
        buttonPanel.add(button8);
        JButton button1 = ButtonFactory.createButton(3);
        buttonPanel.add(button1);
        JButton button9 = ButtonFactory.createButton(28);
        buttonPanel.add(button9);
        JButton button4 = ButtonFactory.createButton(8);
        buttonPanel.add(button4);
        
         
        listModel.addElement(buttonPanel);
        
        
        JPanel timer = new JPanel();
		timer.setLayout(null);
		timer.setBackground(Color.WHITE);
		timer.setSize(400,150);
		timer.setLocation(0,450);
		c.add(timer);

		JPanel wp = new JPanel(new FlowLayout(FlowLayout.CENTER));
		wp.setBackground(Color.WHITE);
		wp.setSize(500,150);
		wp.setLocation(0,10);
		JLabel c1 = new JLabel(" : ");	
		c1.setFont(new Font("serif", Font.BOLD,40));
		c1.setForeground(Color.BLACK);
		JLabel c2 = new JLabel(" : ");
		c2.setFont(new Font("serif", Font.BOLD,40));
		c2.setForeground(Color.BLACK);
		w1 = new JLabel("00");
		w1.setFont(new Font("serif", Font.BOLD,40));
		w1.setForeground(Color.BLACK);
		w2 = new JLabel("00");
		w2.setFont(new Font("serif", Font.BOLD,40));
		w2.setForeground(Color.BLACK);
		w3 = new JLabel("00");
		w3.setFont(new Font("serif", Font.BOLD,40));
		w3.setForeground(Color.BLACK);
		
		start = new JButton("START");
		start.setSize(100,60);
		start.setLocation(80,70);
		start.setFont(new Font("맑은 고딕", Font.BOLD,20));
		start.setBackground(Color.BLACK);
		start.setForeground(Color.WHITE);
		start.addActionListener(this);
		timer.add(start);
		
		pause = new JButton("PAUSE");
		pause.setSize(100,60);
		pause.setLocation(190,70);
		pause.setFont(new Font("맑은 고딕", Font.BOLD,20));
		pause.setBackground(Color.BLACK);
		pause.setForeground(Color.WHITE);
		pause.addActionListener(this);
		timer.add(pause);
		
		end = new JButton("END");
		end.setSize(100,60);
		end.setLocation(300,70);
		end.setFont(new Font("맑은 고딕", Font.BOLD,20));
		end.setBackground(Color.BLACK);
		end.setForeground(Color.WHITE);
		end.addActionListener(this);
		timer.add(end);
		
		wp.add(w1);
		wp.add(c1);
		wp.add(w2);
		wp.add(c2);
		wp.add(w3);

		timer.add(wp);
		c.add(timer);

		pause.setEnabled(false);
		end.setEnabled(false);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == back) {
            new PART2(UID);
			dispose();
        }
        if(e.getSource()==start)
		{
			start.setEnabled(false);
			pause.setEnabled(true);
			end.setEnabled(false);
			
			p_display = new Thread(new Runnable() {

				@Override
				public void run() {
					mm = Integer.parseInt(w1.getText());
					ss = Integer.parseInt(w2.getText());
					ms = Integer.parseInt(w3.getText());
					
					
					while (p_display == Thread.currentThread()) {	

						mm = t % (100000*60) / 100 / 60 ;
						ss = t % (1000*60) / 100 % 60 ;
						ms = t %100;
						
						try {
							Thread.sleep(9);
							
							w1.setText(String.format("%02d", mm));
							w2.setText(String.format("%02d", ss));
							w3.setText(String.format("%02d", ms));
							
							t++;
							
						}catch (InterruptedException e1) {}
					}
				}
			});

			
			p_display.start();
		}
		else if(e.getSource()==pause)
		{
			start.setEnabled(true);
			pause.setEnabled(false);
			end.setEnabled(true);
			
			p_display = null;
		}
		else if(e.getSource()==end)
		{
			start.setEnabled(true);
			pause.setEnabled(false);
			end.setEnabled(false);
			
			w3.setText("00");
			w2.setText("00");
			w1.setText("00");
			
			t=0;
		}
    }
}
class PART3 extends JFrame implements ActionListener {  
    private String UID;
    private JButton back = new JButton("<-");
    private JButton routine = new JButton("루틴 추천");
    private JList<JPanel> list;
    private DefaultListModel<JPanel> listModel;

    public PART3(String UID) {
        this.UID = UID;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);

        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);

        back.setSize(60, 40);
        back.setLocation(0, 0);
        back.setFont(new Font("맑은 고딕", Font.BOLD, 15));
        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);
        back.addActionListener(this);
        c.add(back);

        routine.setSize(130, 80);
        routine.setLocation(170, 50);
        routine.setFont(new Font("맑은 고딕", Font.BOLD, 14));
        routine.setBackground(Color.WHITE);
        routine.setForeground(Color.BLACK);
        routine.addActionListener(this);
        c.add(routine);

        JPanel p = new JPanel();
        p.setLayout(new BorderLayout());
        p.setBackground(Color.WHITE);
        p.setSize(430, 420);
        p.setLocation(30, 160);
        c.add(p);

        // JList 생성
        listModel = new DefaultListModel<>();
        list = new JList<>(listModel);

        // JList 렌더러 설정
        list.setCellRenderer(new ButtonRenderer());

        // JList 선택 이벤트 리스너 설정
        list.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                // 선택된 항목에 대한 작업 수행
                int selectedIndex = list.getSelectedIndex();
                System.out.println("Selected button: " + selectedIndex);
            }
        });

        p.add(new JScrollPane(list));

        // 버튼들을 추가할 JPanel 생성
        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(Color.WHITE);
        buttonPanel.setLayout(new GridLayout(0, 2, 10, 10));  

         
        JButton button1 = ButtonFactory.createButton(2);
        buttonPanel.add(button1);
        JButton button2 = ButtonFactory.createButton(4);
        buttonPanel.add(button2);
        JButton button3 = ButtonFactory.createButton(10);
        buttonPanel.add(button3);
        JButton button4 = ButtonFactory.createButton(11);
        buttonPanel.add(button4);
        JButton button5 = ButtonFactory.createButton(17);
        buttonPanel.add(button5);
        JButton button6 = ButtonFactory.createButton(19);
        buttonPanel.add(button6);
        JButton button7 = ButtonFactory.createButton(20);
        buttonPanel.add(button7);
        JButton button8 = ButtonFactory.createButton(22);
        buttonPanel.add(button8);
        JButton button9 = ButtonFactory.createButton(26);
        buttonPanel.add(button9);
        JButton button10 = ButtonFactory.createButton(29);
        buttonPanel.add(button10);
        JButton button11 = ButtonFactory.createButton(30);
        buttonPanel.add(button11);

         
        listModel.addElement(buttonPanel);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == back) {
            new RecommendByPart(UID);
			dispose();
        }
        if (e.getSource() == routine) {
        	new ROUTINEPART3(UID);
        	dispose();
        }
    }
}

class ROUTINEPART3 extends JFrame implements ActionListener {  
    private String UID;
    private JButton back = new JButton("<-");
    private JList<JPanel> list;
    private DefaultListModel<JPanel> listModel;
    
    private JButton start, pause, end;
	private JLabel w1, w2, w3;
	private int mm, ss, ms, t=0;
	private Thread p_display, t_display;

    public ROUTINEPART3(String UID) {
        this.UID = UID;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("StayCalm");
        setLocation(400, 0);
        setSize(500, 650);
        setVisible(true);

        Container c = getContentPane();
        c.setLayout(null);
        c.setBackground(Color.WHITE);

        back.setSize(60, 40);
        back.setLocation(0, 0);
        back.setFont(new Font("맑은 고딕", Font.BOLD, 15));
        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);
        back.addActionListener(this);
        c.add(back);

        JPanel p = new JPanel();
        p.setLayout(new BorderLayout());
        p.setBackground(Color.WHITE);
        p.setSize(430, 400);
        p.setLocation(30, 50);
        c.add(p);

        // JList 생성
        listModel = new DefaultListModel<>();
        list = new JList<>(listModel);

        // JList 렌더러 설정
        list.setCellRenderer(new ButtonRenderer());

        // JList 선택 이벤트 리스너 설정
        list.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                // 선택된 항목에 대한 작업 수행
                int selectedIndex = list.getSelectedIndex();
                System.out.println("Selected button: " + selectedIndex);
            }
        });

        p.add(new JScrollPane(list));

        // 버튼들을 추가할 JPanel 생성
        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(Color.WHITE);
        buttonPanel.setLayout(new GridLayout(0, 2, 10, 10));  

         
        JButton button3 = ButtonFactory.createButton(10);
        buttonPanel.add(button3);
        JButton button2 = ButtonFactory.createButton(4);
        buttonPanel.add(button2);
        JButton button7 = ButtonFactory.createButton(20);
        buttonPanel.add(button7);
        JButton button1 = ButtonFactory.createButton(2);
        buttonPanel.add(button1);
        JButton button6 = ButtonFactory.createButton(19);
        buttonPanel.add(button6);
        JButton button10 = ButtonFactory.createButton(29);
        buttonPanel.add(button10);
        JButton button9 = ButtonFactory.createButton(26);
        buttonPanel.add(button9);
        JButton button8 = ButtonFactory.createButton(22);
        buttonPanel.add(button8);
        JButton button5 = ButtonFactory.createButton(17);
        buttonPanel.add(button5);
        JButton button4 = ButtonFactory.createButton(11);
        buttonPanel.add(button4);
        JButton button11 = ButtonFactory.createButton(30);
        buttonPanel.add(button11);
        
         
        listModel.addElement(buttonPanel);
        
        
        JPanel timer = new JPanel();
		timer.setLayout(null);
		timer.setBackground(Color.WHITE);
		timer.setSize(400,150);
		timer.setLocation(0,450);
		c.add(timer);

		JPanel wp = new JPanel(new FlowLayout(FlowLayout.CENTER));
		wp.setBackground(Color.WHITE);
		wp.setSize(500,150);
		wp.setLocation(0,10);
		JLabel c1 = new JLabel(" : ");	
		c1.setFont(new Font("serif", Font.BOLD,40));
		c1.setForeground(Color.BLACK);
		JLabel c2 = new JLabel(" : ");
		c2.setFont(new Font("serif", Font.BOLD,40));
		c2.setForeground(Color.BLACK);
		w1 = new JLabel("00");
		w1.setFont(new Font("serif", Font.BOLD,40));
		w1.setForeground(Color.BLACK);
		w2 = new JLabel("00");
		w2.setFont(new Font("serif", Font.BOLD,40));
		w2.setForeground(Color.BLACK);
		w3 = new JLabel("00");
		w3.setFont(new Font("serif", Font.BOLD,40));
		w3.setForeground(Color.BLACK);
		
		start = new JButton("START");
		start.setSize(100,60);
		start.setLocation(80,70);
		start.setFont(new Font("맑은 고딕", Font.BOLD,20));
		start.setBackground(Color.BLACK);
		start.setForeground(Color.WHITE);
		start.addActionListener(this);
		timer.add(start);
		
		pause = new JButton("PAUSE");
		pause.setSize(100,60);
		pause.setLocation(190,70);
		pause.setFont(new Font("맑은 고딕", Font.BOLD,20));
		pause.setBackground(Color.BLACK);
		pause.setForeground(Color.WHITE);
		pause.addActionListener(this);
		timer.add(pause);
		
		end = new JButton("END");
		end.setSize(100,60);
		end.setLocation(300,70);
		end.setFont(new Font("맑은 고딕", Font.BOLD,20));
		end.setBackground(Color.BLACK);
		end.setForeground(Color.WHITE);
		end.addActionListener(this);
		timer.add(end);
		
		wp.add(w1);
		wp.add(c1);
		wp.add(w2);
		wp.add(c2);
		wp.add(w3);

		timer.add(wp);
		c.add(timer);

		pause.setEnabled(false);
		end.setEnabled(false);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == back) {
            new PART3(UID);
			dispose();
        }
        if(e.getSource()==start)
		{
			start.setEnabled(false);
			pause.setEnabled(true);
			end.setEnabled(false);
			
			p_display = new Thread(new Runnable() {

				@Override
				public void run() {
					mm = Integer.parseInt(w1.getText());
					ss = Integer.parseInt(w2.getText());
					ms = Integer.parseInt(w3.getText());
					
					
					while (p_display == Thread.currentThread()) {	

						mm = t % (100000*60) / 100 / 60 ;
						ss = t % (1000*60) / 100 % 60 ;
						ms = t %100;
						
						try {
							Thread.sleep(9);
							
							w1.setText(String.format("%02d", mm));
							w2.setText(String.format("%02d", ss));
							w3.setText(String.format("%02d", ms));
							
							t++;
							
						}catch (InterruptedException e1) {}
					}
				}
			});

			
			p_display.start();
		}
		else if(e.getSource()==pause)
		{
			start.setEnabled(true);
			pause.setEnabled(false);
			end.setEnabled(true);
			
			p_display = null;
		}
		else if(e.getSource()==end)
		{
			start.setEnabled(true);
			pause.setEnabled(false);
			end.setEnabled(false);
			
			w3.setText("00");
			w2.setText("00");
			w1.setText("00");
			
			t=0;
		}
    }
}
